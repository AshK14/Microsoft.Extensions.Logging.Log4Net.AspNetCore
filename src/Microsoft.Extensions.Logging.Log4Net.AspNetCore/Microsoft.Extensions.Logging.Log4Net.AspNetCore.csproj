<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp1.1</TargetFramework>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
    <PackageId>Microsoft.Extensions.Logging.Log4Net.AspNetCore</PackageId>
    <Authors>Huor Swords</Authors>
    <Company></Company>
    <Product>Microsoft.Extensions.Logging.Log4Net.AspNetCore</Product>
    <Description>Allows to configure Log4net as Microsoft Extensions Logging handler on any ASP.NET Core application.

Original code proposal by @anuraj --&gt; https://dotnetthoughts.net/how-to-use-log4net-with-aspnetcore-for-logging/</Description>
    <Copyright></Copyright>
    <PackageTags>Microsoft Extensions Logging Log4Net AspNet Core</PackageTags>
    <RootNamespace>Microsoft.Extensions.Logging.Log4Net.AspNetCore</RootNamespace>
    <AssemblyName>Microsoft.Extensions.Logging.Log4Net.AspNetCore</AssemblyName>
    <PackageReleaseNotes>Adds the possibility of configure a custom exception formatter, and includes a default one to log any exception thrown when Error or Warning levels are configured in the log4net.config file.</PackageReleaseNotes>
    <PackageProjectUrl>https://github.com/huorswords/Microsoft.Extensions.Logging.Log4Net.AspNetCore</PackageProjectUrl>
    <RepositoryUrl>https://github.com/huorswords/Microsoft.Extensions.Logging.Log4Net.AspNetCore</RepositoryUrl>
    <Version>1.1.0</Version>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <FileVersion>1.1.0.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="log4net" Version="2.0.8" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="1.1.2" />
  </ItemGroup>

</Project>